2022-11-03 10:13:43.686  WARN --- o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.fidelity.smallchange]' package. Please check your configuration.
2022-11-03 10:13:44.115  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 10:13:45.106  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-03 15:58:40.019  WARN --- o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.fidelity.smallchange]' package. Please check your configuration.
2022-11-03 15:58:40.363  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 15:58:40.614  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'PortfolioDAO': Unsatisfied dependency expressed through field 'logger'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'org.slf4j.Logger' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2022-11-03 15:58:40.676 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field logger in com.fidelity.smallchange.integration.PortfolioDAOMyBatisImp required a bean of type 'org.slf4j.Logger' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'org.slf4j.Logger' in your configuration.

2022-11-03 16:01:08.149  WARN --- o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.fidelity.smallchange]' package. Please check your configuration.
2022-11-03 16:01:08.584  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:01:08.955  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'PortfolioDAO': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2022-11-03 16:01:09.060 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.fidelity.smallchange.integration.PortfolioDAOMyBatisImp required a bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' in your configuration.

2022-11-03 16:01:50.532  WARN --- o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[com.fidelity.smallchange]' package. Please check your configuration.
2022-11-03 16:01:50.864  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:01:51.132  WARN --- ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'PortfolioDAO': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2022-11-03 16:01:51.192 ERROR --- o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field mapper in com.fidelity.smallchange.integration.PortfolioDAOMyBatisImp required a bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'com.fidelity.smallchange.integration.mapper.PortfolioMapper' in your configuration.

2022-11-03 16:02:45.218  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:02:46.144  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-03 16:06:01.931  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:06:02.941  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-03 16:06:04.949 ERROR --- c.f.s.controller.PortfolioController     : Exception while getting portfolio for ID C101: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SC_CLIENT_PORTFOLIO in statement [SELECT
			    p.client_id,
			    p.portfolio_item_id,
			    p.instrument_id,
			    t.execution_price as cost_price,
			    p.quantity
			FROM
			    sc_client_portfolio p
			LEFT JOIN
				sc_trade t
			ON 
				p.trade_id=t.tarde_id
			    WHERE p.client_id= ?]
### The error may exist in file [C:\Users\Associate\git\SmallChange-RestAPI\target\classes\com\fidelity\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve com.fidelity.smallchange.integration.mapper.PortfolioMapper.getPortfolio
### The error occurred while executing a query
### SQL: SELECT        p.client_id,        p.portfolio_item_id,        p.instrument_id,        t.execution_price as cost_price,        p.quantity    FROM        sc_client_portfolio p    LEFT JOIN     sc_trade t    ON      p.trade_id=t.tarde_id        WHERE p.client_id= ?
### Cause: java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SC_CLIENT_PORTFOLIO in statement [SELECT
			    p.client_id,
			    p.portfolio_item_id,
			    p.instrument_id,
			    t.execution_price as cost_price,
			    p.quantity
			FROM
			    sc_client_portfolio p
			LEFT JOIN
				sc_trade t
			ON 
				p.trade_id=t.tarde_id
			    WHERE p.client_id= ?]
; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: user lacks privilege or object not found: SC_CLIENT_PORTFOLIO in statement [SELECT
			    p.client_id,
			    p.portfolio_item_id,
			    p.instrument_id,
			    t.execution_price as cost_price,
			    p.quantity
			FROM
			    sc_client_portfolio p
			LEFT JOIN
				sc_trade t
			ON 
				p.trade_id=t.tarde_id
			    WHERE p.client_id= ?]
2022-11-03 16:06:59.983  WARN --- o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
2022-11-03 16:07:03.714  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:07:04.679  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-03 16:07:08.103  WARN --- com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
2022-11-03 16:07:08.474 ERROR --- c.f.s.controller.PortfolioController     : Exception while getting portfolio for ID C101: org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: ORA-00904: "T"."TARDE_ID": invalid identifier

### The error may exist in file [C:\Users\Associate\git\SmallChange-RestAPI\target\classes\com\fidelity\smallchange\integration\mapper\PortfolioMapper.xml]
### The error may involve com.fidelity.smallchange.integration.mapper.PortfolioMapper.getPortfolio-Inline
### The error occurred while setting parameters
### SQL: SELECT        p.client_id,        p.portfolio_item_id,        p.instrument_id,        t.execution_price as cost_price,        p.quantity    FROM        sc_client_portfolio p    LEFT JOIN     sc_trade t    ON      p.trade_id=t.tarde_id        WHERE p.client_id= ?
### Cause: java.sql.SQLSyntaxErrorException: ORA-00904: "T"."TARDE_ID": invalid identifier

; bad SQL grammar []; nested exception is java.sql.SQLSyntaxErrorException: ORA-00904: "T"."TARDE_ID": invalid identifier

2022-11-03 16:07:26.312  WARN --- o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [oracle.jdbc.driver.BlockSource.ThreadedCachingBlockSource.BlockReleaser] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 app//oracle.jdbc.internal.Monitor$WaitableMonitor.monitorWait(Monitor.java:259)
 app//oracle.jdbc.internal.Monitor$WaitableMonitor.monitorWait(Monitor.java:241)
 app//oracle.jdbc.driver.BlockSource$ThreadedCachingBlockSource$BlockReleaser.run(BlockSource.java:346)
2022-11-03 16:07:26.313  WARN --- o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [InterruptTimer] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/java.lang.Object.wait(Native Method)
 java.base@17.0.1/java.util.TimerThread.mainLoop(Timer.java:563)
 java.base@17.0.1/java.util.TimerThread.run(Timer.java:516)
2022-11-03 16:07:26.313  WARN --- o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [OJDBC-WORKER-THREAD-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:401)
 java.base@17.0.1/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:903)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1061)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
2022-11-03 16:07:26.314  WARN --- o.a.c.loader.WebappClassLoaderBase       : The web application [ROOT] appears to have started a thread named [HikariPool-1 housekeeper] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.base@17.0.1/jdk.internal.misc.Unsafe.park(Native Method)
 java.base@17.0.1/java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:252)
 java.base@17.0.1/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:1672)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1182)
 java.base@17.0.1/java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:899)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1062)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1122)
 java.base@17.0.1/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
 java.base@17.0.1/java.lang.Thread.run(Thread.java:833)
2022-11-03 16:07:30.048  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2022-11-03 16:07:31.080  INFO --- o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2022-11-03 16:07:32.874  WARN --- com.zaxxer.hikari.util.DriverDataSource  : Registered driver with driverClassName=oracle.jdbc.driver.OracleDriver was not found, trying direct instantiation.
